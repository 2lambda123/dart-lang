parseUnit(extension)
  skipErrorTokens(extension)
  listener: beginCompilationUnit(extension)
  syntheticPreviousToken(extension)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(, extension, null, null, null, null, null, Instance of 'DirectiveContext')
      parseExtension(extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET1)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET1, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          ensureBlock(), null, extension type declaration)
            reportRecoverableError(), Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}])
              listener: handleRecoverableError(Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}], ), ))
            insertBlock())
              rewriter()
              rewriter()
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, ET1)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, type, })
  listener: endTopLevelDeclaration(extends)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(extends)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(extends)
      isReservedKeyword(Foo)
      parseFields(}, null, null, null, null, null, null, null, }, Instance of 'NoType', extends, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, })
        reportRecoverableError(extends, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, extends, extends)
        listener: handleNoType(})
        ensureIdentifierPotentiallyRecovered(}, topLevelVariableDeclaration, false)
          reportRecoverableErrorWithToken(extends, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifierButGotKeyword, 'extends' can't be used as an identifier because it's a keyword., Try renaming this to be an identifier that isn't a keyword., {lexeme: extends}], extends, extends)
          listener: handleIdentifier(extends, topLevelVariableDeclaration)
        parseFieldInitializerOpt(extends, extends, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Foo)
        ensureSemicolon(extends)
          reportRecoverableError(extends, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], extends, extends)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, extends, ;)
  listener: endTopLevelDeclaration(Foo)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Foo)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Foo)
      isReservedKeyword({)
      parseTopLevelMethod(;, null, null, ;, Instance of 'NoType', null, Foo, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Foo, topLevelFunctionDeclaration)
        parseMethodTypeVar(Foo)
          listener: handleNoTypeVariables({)
        parseGetterOrFormalParameters(Foo, Foo, false, MemberKind.TopLevelMethod)
          missingParameterMessage(MemberKind.TopLevelMethod)
          reportRecoverableError(Foo, MissingFunctionParameters)
            listener: handleRecoverableError(MissingFunctionParameters, Foo, Foo)
          rewriter()
          parseFormalParametersRest((, MemberKind.TopLevelMethod)
            listener: beginFormalParameters((, MemberKind.TopLevelMethod)
            listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(0, {, })
        listener: endTopLevelMethod(Foo, null, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(}, extension, null, null, null, null, null, Instance of 'DirectiveContext')
      parseExtension(extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET2)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET2, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          ensureBlock(), null, extension type declaration)
            reportRecoverableError(), Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}])
              listener: handleRecoverableError(Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}], ), ))
            insertBlock())
              rewriter()
              rewriter()
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, ET2)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, type, })
  listener: endTopLevelDeclaration(with)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(with)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(with)
      isReservedKeyword(Foo)
      parseFields(}, null, null, null, null, null, null, null, }, Instance of 'NoType', with, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, })
        reportRecoverableError(with, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, with, with)
        listener: handleNoType(})
        ensureIdentifierPotentiallyRecovered(}, topLevelVariableDeclaration, false)
          reportRecoverableErrorWithToken(with, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifierButGotKeyword, 'with' can't be used as an identifier because it's a keyword., Try renaming this to be an identifier that isn't a keyword., {lexeme: with}], with, with)
          listener: handleIdentifier(with, topLevelVariableDeclaration)
        parseFieldInitializerOpt(with, with, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Foo)
        ensureSemicolon(with)
          reportRecoverableError(with, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], with, with)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, with, ;)
  listener: endTopLevelDeclaration(Foo)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Foo)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Foo)
      isReservedKeyword({)
      parseTopLevelMethod(;, null, null, ;, Instance of 'NoType', null, Foo, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Foo, topLevelFunctionDeclaration)
        parseMethodTypeVar(Foo)
          listener: handleNoTypeVariables({)
        parseGetterOrFormalParameters(Foo, Foo, false, MemberKind.TopLevelMethod)
          missingParameterMessage(MemberKind.TopLevelMethod)
          reportRecoverableError(Foo, MissingFunctionParameters)
            listener: handleRecoverableError(MissingFunctionParameters, Foo, Foo)
          rewriter()
          parseFormalParametersRest((, MemberKind.TopLevelMethod)
            listener: beginFormalParameters((, MemberKind.TopLevelMethod)
            listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(0, {, })
        listener: endTopLevelMethod(Foo, null, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(}, extension, null, null, null, null, null, Instance of 'DirectiveContext')
      parseExtension(extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET3)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET3, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          ensureBlock(), null, extension type declaration)
            reportRecoverableError(), Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}])
              listener: handleRecoverableError(Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}], ), ))
            insertBlock())
              rewriter()
              rewriter()
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, ET3)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, type, })
  listener: endTopLevelDeclaration(with)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(with)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(with)
      isReservedKeyword(Foo)
      parseFields(}, null, null, null, null, null, null, null, }, Instance of 'NoType', with, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, })
        reportRecoverableError(with, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, with, with)
        listener: handleNoType(})
        ensureIdentifierPotentiallyRecovered(}, topLevelVariableDeclaration, false)
          reportRecoverableErrorWithToken(with, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifierButGotKeyword, 'with' can't be used as an identifier because it's a keyword., Try renaming this to be an identifier that isn't a keyword., {lexeme: with}], with, with)
          listener: handleIdentifier(with, topLevelVariableDeclaration)
        parseFieldInitializerOpt(with, with, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Foo)
        ensureSemicolon(with)
          reportRecoverableError(with, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], with, with)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, with, ;)
  listener: endTopLevelDeclaration(Foo)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Foo)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Foo)
      isReservedKeyword(,)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'NoType', Foo, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        reportRecoverableError(Foo, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, Foo, Foo)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelVariableDeclaration, false)
          listener: handleIdentifier(Foo, topLevelVariableDeclaration)
        parseFieldInitializerOpt(Foo, Foo, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(,)
        ensureIdentifier(,, topLevelVariableDeclaration)
          listener: handleIdentifier(Bar, topLevelVariableDeclaration)
        parseFieldInitializerOpt(Bar, Bar, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer({)
        ensureSemicolon(Bar)
          reportRecoverableError(Bar, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], Bar, Bar)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 2, Foo, ;)
  listener: endTopLevelDeclaration({)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar({)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember({)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken({, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '{'., null, {lexeme: {}], {, {)
      parseInvalidBlock(;)
        parseBlock(;, BlockKind(invalid))
          ensureBlock(;, null, null)
          listener: beginBlock({, BlockKind(invalid))
          notEofOrValue(}, })
          listener: endBlock(0, {, }, BlockKind(invalid))
        listener: handleInvalidTopLevelBlock({)
      listener: handleInvalidTopLevelDeclaration(})
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(}, extension, null, null, null, null, null, Instance of 'DirectiveContext')
      parseExtension(extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET4)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET4, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          ensureBlock(), null, extension type declaration)
            reportRecoverableError(), Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}])
              listener: handleRecoverableError(Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}], ), ))
            insertBlock())
              rewriter()
              rewriter()
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, ET4)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, type, })
  listener: endTopLevelDeclaration(extends)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(extends)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(extends)
      isReservedKeyword(Foo)
      parseFields(}, null, null, null, null, null, null, null, }, Instance of 'NoType', extends, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, })
        reportRecoverableError(extends, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, extends, extends)
        listener: handleNoType(})
        ensureIdentifierPotentiallyRecovered(}, topLevelVariableDeclaration, false)
          reportRecoverableErrorWithToken(extends, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifierButGotKeyword, 'extends' can't be used as an identifier because it's a keyword., Try renaming this to be an identifier that isn't a keyword., {lexeme: extends}], extends, extends)
          listener: handleIdentifier(extends, topLevelVariableDeclaration)
        parseFieldInitializerOpt(extends, extends, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Foo)
        ensureSemicolon(extends)
          reportRecoverableError(extends, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], extends, extends)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, extends, ;)
  listener: endTopLevelDeclaration(Foo)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Foo)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Foo)
      isReservedKeyword(with)
      indicatesMethodOrField(Bar)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'NoType', Foo, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        reportRecoverableError(Foo, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, Foo, Foo)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelVariableDeclaration, false)
          listener: handleIdentifier(Foo, topLevelVariableDeclaration)
        parseFieldInitializerOpt(Foo, Foo, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(with)
        ensureSemicolon(Foo)
          reportRecoverableError(Foo, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], Foo, Foo)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, Foo, ;)
  listener: endTopLevelDeclaration(with)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(with)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(with)
      isReservedKeyword(Bar)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'NoType', with, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        reportRecoverableError(with, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, with, with)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelVariableDeclaration, false)
          reportRecoverableErrorWithToken(with, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifierButGotKeyword, 'with' can't be used as an identifier because it's a keyword., Try renaming this to be an identifier that isn't a keyword., {lexeme: with}], with, with)
          listener: handleIdentifier(with, topLevelVariableDeclaration)
        parseFieldInitializerOpt(with, with, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Bar)
        ensureSemicolon(with)
          reportRecoverableError(with, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], with, with)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, with, ;)
  listener: endTopLevelDeclaration(Bar)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Bar)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Bar)
      isReservedKeyword({)
      parseTopLevelMethod(;, null, null, ;, Instance of 'NoType', null, Bar, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Bar, topLevelFunctionDeclaration)
        parseMethodTypeVar(Bar)
          listener: handleNoTypeVariables({)
        parseGetterOrFormalParameters(Bar, Bar, false, MemberKind.TopLevelMethod)
          missingParameterMessage(MemberKind.TopLevelMethod)
          reportRecoverableError(Bar, MissingFunctionParameters)
            listener: handleRecoverableError(MissingFunctionParameters, Bar, Bar)
          rewriter()
          parseFormalParametersRest((, MemberKind.TopLevelMethod)
            listener: beginFormalParameters((, MemberKind.TopLevelMethod)
            listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(0, {, })
        listener: endTopLevelMethod(Bar, null, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(}, extension, null, null, null, null, null, Instance of 'DirectiveContext')
      parseExtension(extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET5)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET5, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          ensureBlock(), null, extension type declaration)
            reportRecoverableError(), Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}])
              listener: handleRecoverableError(Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}], ), ))
            insertBlock())
              rewriter()
              rewriter()
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, ET5)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, type, })
  listener: endTopLevelDeclaration(extends)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(extends)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(extends)
      isReservedKeyword(Foo)
      parseFields(}, null, null, null, null, null, null, null, }, Instance of 'NoType', extends, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, })
        reportRecoverableError(extends, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, extends, extends)
        listener: handleNoType(})
        ensureIdentifierPotentiallyRecovered(}, topLevelVariableDeclaration, false)
          reportRecoverableErrorWithToken(extends, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifierButGotKeyword, 'extends' can't be used as an identifier because it's a keyword., Try renaming this to be an identifier that isn't a keyword., {lexeme: extends}], extends, extends)
          listener: handleIdentifier(extends, topLevelVariableDeclaration)
        parseFieldInitializerOpt(extends, extends, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Foo)
        ensureSemicolon(extends)
          reportRecoverableError(extends, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], extends, extends)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, extends, ;)
  listener: endTopLevelDeclaration(Foo)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Foo)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Foo)
      isReservedKeyword(with)
      indicatesMethodOrField(Bar)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'NoType', Foo, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        reportRecoverableError(Foo, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, Foo, Foo)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelVariableDeclaration, false)
          listener: handleIdentifier(Foo, topLevelVariableDeclaration)
        parseFieldInitializerOpt(Foo, Foo, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(with)
        ensureSemicolon(Foo)
          reportRecoverableError(Foo, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], Foo, Foo)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, Foo, ;)
  listener: endTopLevelDeclaration(with)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(with)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(with)
      isReservedKeyword(Bar)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'NoType', with, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        reportRecoverableError(with, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, with, with)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelVariableDeclaration, false)
          reportRecoverableErrorWithToken(with, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifierButGotKeyword, 'with' can't be used as an identifier because it's a keyword., Try renaming this to be an identifier that isn't a keyword., {lexeme: with}], with, with)
          listener: handleIdentifier(with, topLevelVariableDeclaration)
        parseFieldInitializerOpt(with, with, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Bar)
        ensureSemicolon(with)
          reportRecoverableError(with, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], with, with)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, with, ;)
  listener: endTopLevelDeclaration(Bar)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Bar)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Bar)
      isReservedKeyword(,)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'NoType', Bar, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        reportRecoverableError(Bar, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, Bar, Bar)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelVariableDeclaration, false)
          listener: handleIdentifier(Bar, topLevelVariableDeclaration)
        parseFieldInitializerOpt(Bar, Bar, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(,)
        ensureIdentifier(,, topLevelVariableDeclaration)
          listener: handleIdentifier(Baz, topLevelVariableDeclaration)
        parseFieldInitializerOpt(Baz, Baz, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer({)
        ensureSemicolon(Baz)
          reportRecoverableError(Baz, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], Baz, Baz)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 2, Bar, ;)
  listener: endTopLevelDeclaration({)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar({)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember({)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken({, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '{'., null, {lexeme: {}], {, {)
      parseInvalidBlock(;)
        parseBlock(;, BlockKind(invalid))
          ensureBlock(;, null, null)
          listener: beginBlock({, BlockKind(invalid))
          notEofOrValue(}, })
          listener: endBlock(0, {, }, BlockKind(invalid))
        listener: handleInvalidTopLevelBlock({)
      listener: handleInvalidTopLevelDeclaration(})
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(}, extension, null, null, null, null, null, Instance of 'DirectiveContext')
      parseExtension(extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET6)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET6, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          ensureBlock(), null, extension type declaration)
            reportRecoverableError(), Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}])
              listener: handleRecoverableError(Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}], ), ))
            insertBlock())
              rewriter()
              rewriter()
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, ET6)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, type, })
  listener: endTopLevelDeclaration(extends)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(extends)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(extends)
      isReservedKeyword(Foo)
      parseFields(}, null, null, null, null, null, null, null, }, Instance of 'NoType', extends, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, })
        reportRecoverableError(extends, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, extends, extends)
        listener: handleNoType(})
        ensureIdentifierPotentiallyRecovered(}, topLevelVariableDeclaration, false)
          reportRecoverableErrorWithToken(extends, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifierButGotKeyword, 'extends' can't be used as an identifier because it's a keyword., Try renaming this to be an identifier that isn't a keyword., {lexeme: extends}], extends, extends)
          listener: handleIdentifier(extends, topLevelVariableDeclaration)
        parseFieldInitializerOpt(extends, extends, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Foo)
        ensureSemicolon(extends)
          reportRecoverableError(extends, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], extends, extends)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, extends, ;)
  listener: endTopLevelDeclaration(Foo)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Foo)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Foo)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'SimpleType', implements, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        listener: handleIdentifier(Foo, typeReference)
        listener: handleNoTypeArguments(implements)
        listener: handleType(Foo, null)
        ensureIdentifierPotentiallyRecovered(Foo, topLevelVariableDeclaration, false)
          listener: handleIdentifier(implements, topLevelVariableDeclaration)
        parseFieldInitializerOpt(implements, implements, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Bar)
        ensureSemicolon(implements)
          reportRecoverableError(implements, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], implements, implements)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, Foo, ;)
  listener: endTopLevelDeclaration(Bar)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Bar)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Bar)
      isReservedKeyword({)
      parseTopLevelMethod(;, null, null, ;, Instance of 'NoType', null, Bar, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Bar, topLevelFunctionDeclaration)
        parseMethodTypeVar(Bar)
          listener: handleNoTypeVariables({)
        parseGetterOrFormalParameters(Bar, Bar, false, MemberKind.TopLevelMethod)
          missingParameterMessage(MemberKind.TopLevelMethod)
          reportRecoverableError(Bar, MissingFunctionParameters)
            listener: handleRecoverableError(MissingFunctionParameters, Bar, Bar)
          rewriter()
          parseFormalParametersRest((, MemberKind.TopLevelMethod)
            listener: beginFormalParameters((, MemberKind.TopLevelMethod)
            listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(0, {, })
        listener: endTopLevelMethod(Bar, null, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(}, extension, null, null, null, null, null, Instance of 'DirectiveContext')
      parseExtension(extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET7)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET7, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          ensureBlock(), null, extension type declaration)
            reportRecoverableError(), Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}])
              listener: handleRecoverableError(Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}], ), ))
            insertBlock())
              rewriter()
              rewriter()
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, ET7)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, type, })
  listener: endTopLevelDeclaration(with)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(with)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(with)
      isReservedKeyword(Foo)
      parseFields(}, null, null, null, null, null, null, null, }, Instance of 'NoType', with, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, })
        reportRecoverableError(with, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, with, with)
        listener: handleNoType(})
        ensureIdentifierPotentiallyRecovered(}, topLevelVariableDeclaration, false)
          reportRecoverableErrorWithToken(with, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifierButGotKeyword, 'with' can't be used as an identifier because it's a keyword., Try renaming this to be an identifier that isn't a keyword., {lexeme: with}], with, with)
          listener: handleIdentifier(with, topLevelVariableDeclaration)
        parseFieldInitializerOpt(with, with, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Foo)
        ensureSemicolon(with)
          reportRecoverableError(with, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], with, with)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, with, ;)
  listener: endTopLevelDeclaration(Foo)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Foo)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Foo)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'SimpleType', implements, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        listener: handleIdentifier(Foo, typeReference)
        listener: handleNoTypeArguments(implements)
        listener: handleType(Foo, null)
        ensureIdentifierPotentiallyRecovered(Foo, topLevelVariableDeclaration, false)
          listener: handleIdentifier(implements, topLevelVariableDeclaration)
        parseFieldInitializerOpt(implements, implements, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Bar)
        ensureSemicolon(implements)
          reportRecoverableError(implements, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], implements, implements)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, Foo, ;)
  listener: endTopLevelDeclaration(Bar)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Bar)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Bar)
      isReservedKeyword({)
      parseTopLevelMethod(;, null, null, ;, Instance of 'NoType', null, Bar, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Bar, topLevelFunctionDeclaration)
        parseMethodTypeVar(Bar)
          listener: handleNoTypeVariables({)
        parseGetterOrFormalParameters(Bar, Bar, false, MemberKind.TopLevelMethod)
          missingParameterMessage(MemberKind.TopLevelMethod)
          reportRecoverableError(Bar, MissingFunctionParameters)
            listener: handleRecoverableError(MissingFunctionParameters, Bar, Bar)
          rewriter()
          parseFormalParametersRest((, MemberKind.TopLevelMethod)
            listener: beginFormalParameters((, MemberKind.TopLevelMethod)
            listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(0, {, })
        listener: endTopLevelMethod(Bar, null, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(}, extension, null, null, null, null, null, Instance of 'DirectiveContext')
      parseExtension(extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET8)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET8, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          ensureBlock(), null, extension type declaration)
            reportRecoverableError(), Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}])
              listener: handleRecoverableError(Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}], ), ))
            insertBlock())
              rewriter()
              rewriter()
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, ET8)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, type, })
  listener: endTopLevelDeclaration(with)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(with)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(with)
      isReservedKeyword(Foo)
      parseFields(}, null, null, null, null, null, null, null, }, Instance of 'NoType', with, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, })
        reportRecoverableError(with, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, with, with)
        listener: handleNoType(})
        ensureIdentifierPotentiallyRecovered(}, topLevelVariableDeclaration, false)
          reportRecoverableErrorWithToken(with, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifierButGotKeyword, 'with' can't be used as an identifier because it's a keyword., Try renaming this to be an identifier that isn't a keyword., {lexeme: with}], with, with)
          listener: handleIdentifier(with, topLevelVariableDeclaration)
        parseFieldInitializerOpt(with, with, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Foo)
        ensureSemicolon(with)
          reportRecoverableError(with, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], with, with)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, with, ;)
  listener: endTopLevelDeclaration(Foo)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Foo)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Foo)
      isReservedKeyword(,)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'NoType', Foo, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        reportRecoverableError(Foo, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, Foo, Foo)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelVariableDeclaration, false)
          listener: handleIdentifier(Foo, topLevelVariableDeclaration)
        parseFieldInitializerOpt(Foo, Foo, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(,)
        ensureIdentifier(,, topLevelVariableDeclaration)
          listener: handleIdentifier(Bar, topLevelVariableDeclaration)
        parseFieldInitializerOpt(Bar, Bar, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(implements)
        ensureSemicolon(Bar)
          reportRecoverableError(Bar, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], Bar, Bar)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 2, Foo, ;)
  listener: endTopLevelDeclaration(implements)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(implements)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(implements)
      isReservedKeyword(Baz)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'NoType', implements, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        reportRecoverableError(implements, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, implements, implements)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelVariableDeclaration, false)
          listener: handleIdentifier(implements, topLevelVariableDeclaration)
        parseFieldInitializerOpt(implements, implements, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Baz)
        ensureSemicolon(implements)
          reportRecoverableError(implements, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], implements, implements)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, implements, ;)
  listener: endTopLevelDeclaration(Baz)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Baz)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Baz)
      isReservedKeyword({)
      parseTopLevelMethod(;, null, null, ;, Instance of 'NoType', null, Baz, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Baz, topLevelFunctionDeclaration)
        parseMethodTypeVar(Baz)
          listener: handleNoTypeVariables({)
        parseGetterOrFormalParameters(Baz, Baz, false, MemberKind.TopLevelMethod)
          missingParameterMessage(MemberKind.TopLevelMethod)
          reportRecoverableError(Baz, MissingFunctionParameters)
            listener: handleRecoverableError(MissingFunctionParameters, Baz, Baz)
          rewriter()
          parseFormalParametersRest((, MemberKind.TopLevelMethod)
            listener: beginFormalParameters((, MemberKind.TopLevelMethod)
            listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(0, {, })
        listener: endTopLevelMethod(Baz, null, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(}, extension, null, null, null, null, null, Instance of 'DirectiveContext')
      parseExtension(extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET9)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET9, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          ensureBlock(), null, extension type declaration)
            reportRecoverableError(), Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}])
              listener: handleRecoverableError(Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}], ), ))
            insertBlock())
              rewriter()
              rewriter()
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, ET9)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, type, })
  listener: endTopLevelDeclaration(extends)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(extends)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(extends)
      isReservedKeyword(Foo)
      parseFields(}, null, null, null, null, null, null, null, }, Instance of 'NoType', extends, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, })
        reportRecoverableError(extends, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, extends, extends)
        listener: handleNoType(})
        ensureIdentifierPotentiallyRecovered(}, topLevelVariableDeclaration, false)
          reportRecoverableErrorWithToken(extends, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifierButGotKeyword, 'extends' can't be used as an identifier because it's a keyword., Try renaming this to be an identifier that isn't a keyword., {lexeme: extends}], extends, extends)
          listener: handleIdentifier(extends, topLevelVariableDeclaration)
        parseFieldInitializerOpt(extends, extends, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Foo)
        ensureSemicolon(extends)
          reportRecoverableError(extends, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], extends, extends)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, extends, ;)
  listener: endTopLevelDeclaration(Foo)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Foo)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Foo)
      isReservedKeyword(with)
      indicatesMethodOrField(Bar)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'NoType', Foo, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        reportRecoverableError(Foo, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, Foo, Foo)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelVariableDeclaration, false)
          listener: handleIdentifier(Foo, topLevelVariableDeclaration)
        parseFieldInitializerOpt(Foo, Foo, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(with)
        ensureSemicolon(Foo)
          reportRecoverableError(Foo, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], Foo, Foo)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, Foo, ;)
  listener: endTopLevelDeclaration(with)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(with)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(with)
      isReservedKeyword(Bar)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'NoType', with, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        reportRecoverableError(with, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, with, with)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelVariableDeclaration, false)
          reportRecoverableErrorWithToken(with, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifierButGotKeyword, 'with' can't be used as an identifier because it's a keyword., Try renaming this to be an identifier that isn't a keyword., {lexeme: with}], with, with)
          listener: handleIdentifier(with, topLevelVariableDeclaration)
        parseFieldInitializerOpt(with, with, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Bar)
        ensureSemicolon(with)
          reportRecoverableError(with, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], with, with)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, with, ;)
  listener: endTopLevelDeclaration(Bar)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Bar)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Bar)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'SimpleType', implements, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        listener: handleIdentifier(Bar, typeReference)
        listener: handleNoTypeArguments(implements)
        listener: handleType(Bar, null)
        ensureIdentifierPotentiallyRecovered(Bar, topLevelVariableDeclaration, false)
          listener: handleIdentifier(implements, topLevelVariableDeclaration)
        parseFieldInitializerOpt(implements, implements, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Baz)
        ensureSemicolon(implements)
          reportRecoverableError(implements, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], implements, implements)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, Bar, ;)
  listener: endTopLevelDeclaration(Baz)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Baz)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Baz)
      isReservedKeyword({)
      parseTopLevelMethod(;, null, null, ;, Instance of 'NoType', null, Baz, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Baz, topLevelFunctionDeclaration)
        parseMethodTypeVar(Baz)
          listener: handleNoTypeVariables({)
        parseGetterOrFormalParameters(Baz, Baz, false, MemberKind.TopLevelMethod)
          missingParameterMessage(MemberKind.TopLevelMethod)
          reportRecoverableError(Baz, MissingFunctionParameters)
            listener: handleRecoverableError(MissingFunctionParameters, Baz, Baz)
          rewriter()
          parseFormalParametersRest((, MemberKind.TopLevelMethod)
            listener: beginFormalParameters((, MemberKind.TopLevelMethod)
            listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(0, {, })
        listener: endTopLevelMethod(Baz, null, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(}, extension, null, null, null, null, null, Instance of 'DirectiveContext')
      parseExtension(extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET10)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET10, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          ensureBlock(), null, extension type declaration)
            reportRecoverableError(), Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}])
              listener: handleRecoverableError(Message[ExpectedClassOrMixinBody, A extension type declaration must have a body, even if it is empty., Try adding an empty body., {string: extension type declaration}], ), ))
            insertBlock())
              rewriter()
              rewriter()
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, ET10)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, type, })
  listener: endTopLevelDeclaration(extends)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(extends)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(extends)
      isReservedKeyword(Foo)
      parseFields(}, null, null, null, null, null, null, null, }, Instance of 'NoType', extends, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, })
        reportRecoverableError(extends, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, extends, extends)
        listener: handleNoType(})
        ensureIdentifierPotentiallyRecovered(}, topLevelVariableDeclaration, false)
          reportRecoverableErrorWithToken(extends, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifierButGotKeyword, 'extends' can't be used as an identifier because it's a keyword., Try renaming this to be an identifier that isn't a keyword., {lexeme: extends}], extends, extends)
          listener: handleIdentifier(extends, topLevelVariableDeclaration)
        parseFieldInitializerOpt(extends, extends, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Foo)
        ensureSemicolon(extends)
          reportRecoverableError(extends, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], extends, extends)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, extends, ;)
  listener: endTopLevelDeclaration(Foo)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Foo)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Foo)
      isReservedKeyword(with)
      indicatesMethodOrField(Bar)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'NoType', Foo, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        reportRecoverableError(Foo, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, Foo, Foo)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelVariableDeclaration, false)
          listener: handleIdentifier(Foo, topLevelVariableDeclaration)
        parseFieldInitializerOpt(Foo, Foo, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(with)
        ensureSemicolon(Foo)
          reportRecoverableError(Foo, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], Foo, Foo)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, Foo, ;)
  listener: endTopLevelDeclaration(with)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(with)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(with)
      isReservedKeyword(Bar)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'NoType', with, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        reportRecoverableError(with, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, with, with)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelVariableDeclaration, false)
          reportRecoverableErrorWithToken(with, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifierButGotKeyword, 'with' can't be used as an identifier because it's a keyword., Try renaming this to be an identifier that isn't a keyword., {lexeme: with}], with, with)
          listener: handleIdentifier(with, topLevelVariableDeclaration)
        parseFieldInitializerOpt(with, with, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Bar)
        ensureSemicolon(with)
          reportRecoverableError(with, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], with, with)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, with, ;)
  listener: endTopLevelDeclaration(Bar)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Bar)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Bar)
      isReservedKeyword(,)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'NoType', Bar, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        reportRecoverableError(Bar, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, Bar, Bar)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelVariableDeclaration, false)
          listener: handleIdentifier(Bar, topLevelVariableDeclaration)
        parseFieldInitializerOpt(Bar, Bar, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(,)
        ensureIdentifier(,, topLevelVariableDeclaration)
          listener: handleIdentifier(Baz, topLevelVariableDeclaration)
        parseFieldInitializerOpt(Baz, Baz, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(implements)
        ensureSemicolon(Baz)
          reportRecoverableError(Baz, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], Baz, Baz)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 2, Bar, ;)
  listener: endTopLevelDeclaration(implements)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(implements)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(implements)
      isReservedKeyword(Boz)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'NoType', implements, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        reportRecoverableError(implements, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, implements, implements)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelVariableDeclaration, false)
          listener: handleIdentifier(implements, topLevelVariableDeclaration)
        parseFieldInitializerOpt(implements, implements, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(Boz)
        ensureSemicolon(implements)
          reportRecoverableError(implements, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], implements, implements)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, implements, ;)
  listener: endTopLevelDeclaration(Boz)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Boz)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Boz)
      isReservedKeyword({)
      parseTopLevelMethod(;, null, null, ;, Instance of 'NoType', null, Boz, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Boz, topLevelFunctionDeclaration)
        parseMethodTypeVar(Boz)
          listener: handleNoTypeVariables({)
        parseGetterOrFormalParameters(Boz, Boz, false, MemberKind.TopLevelMethod)
          missingParameterMessage(MemberKind.TopLevelMethod)
          reportRecoverableError(Boz, MissingFunctionParameters)
            listener: handleRecoverableError(MissingFunctionParameters, Boz, Boz)
          rewriter()
          parseFormalParametersRest((, MemberKind.TopLevelMethod)
            listener: beginFormalParameters((, MemberKind.TopLevelMethod)
            listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(0, {, })
        listener: endTopLevelMethod(Boz, null, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(extension)
  listener: endCompilationUnit(47, )
