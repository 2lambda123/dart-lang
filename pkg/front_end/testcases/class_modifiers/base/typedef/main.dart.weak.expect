library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/class_modifiers/base/typedef/main.dart:7:7: Error: The class 'A' can't be implemented outside of its library because it's a base class.
// class ImplementsBaseClassTypedef implements ATypeDef {}
//       ^
//
// pkg/front_end/testcases/class_modifiers/base/typedef/main.dart:9:7: Error: The class 'A' can't be implemented outside of its library because it's a base class.
// class ImplementsBaseClassTypedef2 implements ATypeDef2 {}
//       ^
//
// pkg/front_end/testcases/class_modifiers/base/typedef/main.dart:11:7: Error: The mixin 'M' can't be implemented outside of its library because it's a base mixin.
// class ImplementsBaseMixinTypeDef implements MTypeDef {}
//       ^
//
// pkg/front_end/testcases/class_modifiers/base/typedef/main.dart:13:7: Error: The mixin 'M' can't be implemented outside of its library because it's a base mixin.
// class ImplementsBaseMixinTypeDef2 implements MTypeDef2 {}
//       ^
//
// pkg/front_end/testcases/class_modifiers/base/typedef/main.dart:19:7: Error: The class 'A' can't be implemented outside of its library because it's a base class.
// class ImplementsBaseClassTypedefOutside implements AOutsideTypedef {}
//       ^
//
// pkg/front_end/testcases/class_modifiers/base/typedef/main.dart:21:7: Error: The mixin 'M' can't be implemented outside of its library because it's a base mixin.
// class ImplementsBaseMixinTypeDefOutside implements MOutsideTypedef {}
//       ^
//
import self as self;
import "main_lib.dart" as mai;
import "dart:core" as core;

import "org-dartlang-testcase:///main_lib.dart";

typedef AOutsideTypedef = mai::A;
typedef MOutsideTypedef = mai::M;
class ImplementsBaseClassTypedef extends core::Object implements mai::A {
  synthetic constructor •() → self::ImplementsBaseClassTypedef
    : super core::Object::•()
    ;
}
class ImplementsBaseClassTypedef2 extends core::Object implements mai::A {
  synthetic constructor •() → self::ImplementsBaseClassTypedef2
    : super core::Object::•()
    ;
}
class ImplementsBaseMixinTypeDef extends core::Object implements mai::M {
  synthetic constructor •() → self::ImplementsBaseMixinTypeDef
    : super core::Object::•()
    ;
}
class ImplementsBaseMixinTypeDef2 extends core::Object implements mai::M {
  synthetic constructor •() → self::ImplementsBaseMixinTypeDef2
    : super core::Object::•()
    ;
}
class ImplementsBaseClassTypedefOutside extends core::Object implements mai::A {
  synthetic constructor •() → self::ImplementsBaseClassTypedefOutside
    : super core::Object::•()
    ;
}
class ImplementsBaseMixinTypeDefOutside extends core::Object implements mai::M {
  synthetic constructor •() → self::ImplementsBaseMixinTypeDefOutside
    : super core::Object::•()
    ;
}

library /*isNonNullableByDefault*/;
import self as mai;
import "dart:core" as core;

typedef ATypeDef = mai::A;
typedef ATypeDef2 = mai::A;
typedef MTypeDef = mai::M;
typedef MTypeDef2 = mai::M;
base class A extends core::Object {
  synthetic constructor •() → mai::A
    : super core::Object::•()
    ;
}
abstract base class M extends core::Object /*isMixinDeclaration*/  {
}
