# Copyright (c) 2023, the Dart project authors. Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE.md file.

# Reproduce the crash in https://github.com/flutter/flutter/issues/124369.

type: newworld
worlds:
  - entry: main.dart
    errors: false
    sources:
      main.dart: |
        import 'dart:ffi';
        class Foo implements Bar {
          const Foo({required this.bar});
          final HelperClass bar;
        }
        abstract class Bar {
          const factory Bar({required HelperClass bar}) = Foo;
        }
        class HelperClass implements Finalizable {}
    expectedLibraryCount: 1

  - entry: main.dart
    worldType: updated
    expectInitializeFromDill: false
    invalidate:
      - main.dart
    expectedLibraryCount: 1
    advancedInvalidation: importsFfi
