main = <No Member>;
library from "org-dartlang-test:///main.dart" as main {

  import "dart:ffi";

  class Foo extends dart.core::Object implements main::Bar /*hasConstConstructor*/  {
    final field main::HelperClass bar;
    const constructor •({required main::HelperClass bar = #C1}) → main::Foo
      : main::Foo::bar = bar, super dart.core::Object::•() {
      ;
      dart._internal::reachabilityFence(bar);
    }
  }
  abstract class Bar extends dart.core::Object {
    static final field dynamic _redirecting# = <dynamic>[#C2]/*isLegacy*/;
    static factory •({required main::HelperClass bar = #C1}) → main::Bar {
      return block {
        final synthesized main::Foo :expressionValueWrappedFinalizable = new main::Foo::•(bar: bar);
        dart._internal::reachabilityFence(bar);
      } =>:expressionValueWrappedFinalizable;
    }
  }
  class HelperClass extends dart.core::Object implements dart.ffi::Finalizable {
    synthetic constructor •() → main::HelperClass
      : super dart.core::Object::•()
      ;
  }
}
constants  {
  #C1 = null
  #C2 = constructor-tearoff main::Bar::•
}
