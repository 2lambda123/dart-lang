library;
//
// Problems in library:
//
// pkg/front_end/testcases/records/record_literal_unsupported.dart:8:3: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
//   (0, 1);
//   ^
//
// pkg/front_end/testcases/records/record_literal_unsupported.dart:9:3: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
//   (0, b: 1);
//   ^
//
// pkg/front_end/testcases/records/record_literal_unsupported.dart:10:3: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
//   (a: 0, b: 1);
//   ^
//
// pkg/front_end/testcases/records/record_literal_unsupported.dart:11:3: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
//   (a: 0, 1);
//   ^
//
// pkg/front_end/testcases/records/record_literal_unsupported.dart:12:3: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
//   (int, String);
//   ^
//
// pkg/front_end/testcases/records/record_literal_unsupported.dart:16:3: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
//   (a: 0, b: 1, c: 2, d: 3);
//   ^
//
// pkg/front_end/testcases/records/record_literal_unsupported.dart:17:3: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
//   (a: 0, b: 1, d: 2, c: 3);
//   ^
//
// pkg/front_end/testcases/records/record_literal_unsupported.dart:18:3: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
//   (a: 0, d: 1, b: 2, c: 3);
//   ^
//
// pkg/front_end/testcases/records/record_literal_unsupported.dart:19:3: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
//   (d: 0, a: 1, b: 2, c: 3);
//   ^
//
// pkg/front_end/testcases/records/record_literal_unsupported.dart:20:3: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
//   (0, 1, 2, a: 3, b: 4, c: 5);
//   ^
//
// pkg/front_end/testcases/records/record_literal_unsupported.dart:21:3: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
//   (0, 1, a: 2, 3, b: 4, c: 5);
//   ^
//
// pkg/front_end/testcases/records/record_literal_unsupported.dart:22:3: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
//   (0, 1, a: 2, b: 3, 4, c: 5);
//   ^
//
// pkg/front_end/testcases/records/record_literal_unsupported.dart:23:3: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
//   (0, 1, a: 2, b: 3, c: 4, 5);
//   ^
//
// pkg/front_end/testcases/records/record_literal_unsupported.dart:24:3: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
//   (0, a: 1, 2, 3, b: 4, c: 5);
//   ^
//
// pkg/front_end/testcases/records/record_literal_unsupported.dart:25:3: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
//   (a: 0, 1, 2, 3, b: 4, c: 5);
//   ^
//
// pkg/front_end/testcases/records/record_literal_unsupported.dart:30:5: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
//     (a: this, 0);
//     ^
//
import self as self;
import "dart:core" as core;

class Class extends core::Object {
  synthetic constructor •() → self::Class*
    : super core::Object::•()
    ;
  method method() → dynamic {
    invalid-expression "This requires the experimental 'records' language feature to be enabled.";
  }
  abstract member-signature get _identityHashCode() → core::int*; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature operator ==(dynamic other) → core::bool*; -> core::Object::==
  abstract member-signature get hashCode() → core::int*; -> core::Object::hashCode
  abstract member-signature method toString() → core::String*; -> core::Object::toString
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get runtimeType() → core::Type*; -> core::Object::runtimeType
}
static method method() → dynamic {
  invalid-expression "This requires the experimental 'records' language feature to be enabled.";
  invalid-expression "This requires the experimental 'records' language feature to be enabled.";
  invalid-expression "This requires the experimental 'records' language feature to be enabled.";
  let final core::int* #t1 = 0 in invalid-expression "This requires the experimental 'records' language feature to be enabled.";
  invalid-expression "This requires the experimental 'records' language feature to be enabled.";
}
static method sorting() → dynamic {
  invalid-expression "This requires the experimental 'records' language feature to be enabled.";
  let final core::int* #t2 = 0 in let final core::int* #t3 = 1 in let final core::int* #t4 = 2 in invalid-expression "This requires the experimental 'records' language feature to be enabled.";
  let final core::int* #t5 = 0 in let final core::int* #t6 = 1 in let final core::int* #t7 = 2 in invalid-expression "This requires the experimental 'records' language feature to be enabled.";
  let final core::int* #t8 = 0 in let final core::int* #t9 = 1 in let final core::int* #t10 = 2 in invalid-expression "This requires the experimental 'records' language feature to be enabled.";
  invalid-expression "This requires the experimental 'records' language feature to be enabled.";
  let final core::int* #t11 = 0 in let final core::int* #t12 = 1 in let final core::int* #t13 = 2 in invalid-expression "This requires the experimental 'records' language feature to be enabled.";
  let final core::int* #t14 = 0 in let final core::int* #t15 = 1 in let final core::int* #t16 = 2 in let final core::int* #t17 = 3 in invalid-expression "This requires the experimental 'records' language feature to be enabled.";
  let final core::int* #t18 = 0 in let final core::int* #t19 = 1 in let final core::int* #t20 = 2 in let final core::int* #t21 = 3 in let final core::int* #t22 = 4 in invalid-expression "This requires the experimental 'records' language feature to be enabled.";
  let final core::int* #t23 = 0 in let final core::int* #t24 = 1 in let final core::int* #t25 = 2 in invalid-expression "This requires the experimental 'records' language feature to be enabled.";
  let final core::int* #t26 = 0 in let final core::int* #t27 = 1 in let final core::int* #t28 = 2 in invalid-expression "This requires the experimental 'records' language feature to be enabled.";
}
