library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

extension /* unnamed */ _extension#0 on core::Object {
  get q = self::_extension#0|get#q;
}
static method _extension#0|get#q(lowered final core::Object #this) → core::int
  return 42;
static method main() → void {
  #L1:
  {
    dynamic #t1;
    final dynamic #t2 = new core::Object::•() as{ForNonNullableByDefault} dynamic;
    core::int #t3 = -1;
    core::bool #t4 = false;
    if(!#t4) {
      final dynamic #t5 = #t2;
      if(#t5 is core::Object) {
        final core::int #t6 = self::_extension#0|get#q(#t5{core::Object});
        dynamic x = #t6;
        #t3 = 0;
        #t4 = true;
        #t1 = x;
      }
    }
    switch(#t3) {
      #L2:
      case #C1:
        {
          dynamic x = #t1{dynamic};
          {
            core::print(x);
          }
        }
    }
  }
}

constants  {
  #C1 = 0
}
