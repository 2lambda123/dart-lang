library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

class C extends core::Object {
  field core::int? f = null;
  synthetic constructor •() → self::C
    : super core::Object::•()
    ;
}
static method test(dynamic x) → dynamic {
  #L1:
  {
    dynamic #t1;
    final dynamic #t2 = x;
    core::int #t3 = -1;
    core::bool #t4 = false;
    if(!#t4) {
      final dynamic #t5 = #t2;
      if(#t5 is self::C) {
        final core::int? #t6 = #t5{self::C}.{self::C::f}{core::int?};
        final core::int #t7 = #t6;
        core::int f = #t7;
        #t3 = 0;
        #t4 = true;
        #t1 = f;
      }
    }
    switch(#t3) {
      #L2:
      case #C1:
        {
          core::int f = #t1{core::int};
          {
            break #L1;
          }
        }
    }
  }
}

constants  {
  #C1 = 0
}
