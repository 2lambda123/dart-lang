library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

static method f(dynamic x) → dynamic {
  dynamic a;
  {
    final synthesized dynamic #0#0 = x as{TypeError,ForDynamic,ForNonNullableByDefault} core::Map<dynamic, dynamic>;
    late final synthesized dynamic #0#8 = #0#0{core::Map<dynamic, dynamic>}.{core::Map::[]}(#C1){(core::Object?) → dynamic};
    if(!(#0#0 is{ForNonNullableByDefault} core::Map<dynamic, dynamic> && #0#0{core::Map<dynamic, dynamic>}.{core::Map::length}{core::int} =={core::num::==}{(core::Object) → core::bool} #C2 && (!(#0#8 == null) || null is{ForNonNullableByDefault} dynamic && #0#0{core::Map<dynamic, dynamic>}.{core::Map::containsKey}(#C1){(core::Object?) → core::bool}) && (let final dynamic #t1 = a = #0#8 in true)))
      throw new core::StateError::•("Pattern matching error");
  }
}

constants  {
  #C1 = "a"
  #C2 = 1
}
