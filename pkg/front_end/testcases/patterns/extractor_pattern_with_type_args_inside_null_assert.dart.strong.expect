library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

class C<T extends core::Object? = dynamic> extends core::Object {
  covariant-by-class field self::C::T? f = null;
  synthetic constructor •() → self::C<self::C::T%>
    : super core::Object::•()
    ;
}
static method test(dynamic x) → dynamic {
  #L1:
  {
    final dynamic #t1 = x;
    final core::int #t2 = -1;
    final core::bool #t3 = false;
    if(!#t3) {
      final dynamic #t4 = #t1!;
      #t2 = 0;
      #t3 = true;
    }
    switch(#t2) {
      #L2:
      case #C1:
        {
          {
            break #L1;
          }
        }
    }
  }
}

constants  {
  #C1 = 0
}
